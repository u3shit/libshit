
src/libshit/container/ordered_map.hpp should add these lines:
namespace boost { namespace intrusive { template <bool Enabled> struct constant_time_size; } }
namespace boost { namespace intrusive { template <bool Enabled> struct optimize_size; } }
namespace boost { namespace intrusive { template <class BaseHook> struct base_hook; } }
namespace boost { namespace intrusive { template <class Compare> struct compare; } }
namespace boost { namespace intrusive { template <class KeyOfValue> struct key_of_value; } }
namespace boost { namespace intrusive { template <class Tag> struct tag; } }

src/libshit/container/ordered_map.hpp should remove these lines:

The full include-list for src/libshit/container/ordered_map.hpp:
#include <boost/intrusive/intrusive_fwd.hpp>
#include <boost/intrusive/set.hpp>
#include <boost/intrusive/set_hook.hpp>
#include <cstddef>
#include <functional>
#include <iterator>
#include <stdexcept>
#include <type_traits>
#include <utility>
#include <vector>
#include "libshit/assert.hpp"
#include "libshit/check.hpp"
#include "libshit/container/intrusive.hpp"
#include "libshit/except.hpp"
#include "libshit/lua/dynamic_object.hpp"
#include "libshit/lua/type_traits.hpp"
#include "libshit/meta.hpp"
#include "libshit/shared_ptr.hpp"
#include "libshit/utils.hpp"
namespace Libshit { template <typename T, typename KeyOfValue, typename Compare = std::less<typename KeyOfValue::type>> class OrderedMap; }
namespace boost { namespace intrusive { template <bool Enabled> struct constant_time_size; } }
namespace boost { namespace intrusive { template <bool Enabled> struct optimize_size; } }
namespace boost { namespace intrusive { template <class BaseHook> struct base_hook; } }
namespace boost { namespace intrusive { template <class Compare> struct compare; } }
namespace boost { namespace intrusive { template <class KeyOfValue> struct key_of_value; } }
namespace boost { namespace intrusive { template <class Tag> struct tag; } }
---
