
src/libshit/lua/function_call.hpp should add these lines:
#include <lauxlib.h>
#include <lua.h>

src/libshit/lua/function_call.hpp should remove these lines:

The full include-list for src/libshit/lua/function_call.hpp:
#include <lauxlib.h>
#include <lua.h>
#include <boost/config.hpp>
#include <brigand/sequences/list.hpp>
#include <cstddef>
#include <functional>
#include <limits>
#include <ostream>
#include <string>
#include <tuple>
#include <type_traits>
#include <utility>
#include "libshit/assert.hpp"
#include "libshit/except.hpp"
#include "libshit/lua/function_call_types.hpp"
#include "libshit/lua/type_traits.hpp"
#include "libshit/meta_utils.hpp"
namespace Libshit { namespace Lua { namespace Detail { template <auto ...args> struct AutoList; } } }
namespace Libshit { namespace Lua { namespace Detail { template <auto Fun, bool Unsafe, typename Ret, typename Args> struct WrapFunGen; } } }
namespace Libshit { namespace Lua { namespace Detail { template <std::size_t Len, typename Args> struct ArgSeq; } } }
namespace Libshit { namespace Lua { namespace Detail { template <std::size_t N, typename Seq, typename Args> struct GenArgSequence; } } }
namespace Libshit { namespace Lua { namespace Detail { template <typename Args> struct OverloadCheck; } } }
namespace Libshit { namespace Lua { namespace Detail { template <typename Args> struct PrintOverload; } } }
namespace Libshit { namespace Lua { namespace Detail { template <typename Funs, typename Orig = Funs> struct OverloadWrap; } } }
namespace Libshit { namespace Lua { namespace Detail { template <typename Tuple, typename Index> struct TupleGet; } } }
namespace Libshit { namespace Lua { namespace Detail { template <typename Tuple, typename Index> struct TuplePush; } } }
---
