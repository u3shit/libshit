
src/libshit/lua/function_call.hpp should add these lines:
#include <lauxlib.h>                            // for luaL_error
#include <lua.h>                                // for lua_gettop, lua_typename

src/libshit/lua/function_call.hpp should remove these lines:

The full include-list for src/libshit/lua/function_call.hpp:
#include <lauxlib.h>                            // for luaL_error
#include <lua.h>                                // for lua_gettop, lua_typename
#include <boost/config.hpp>                     // for BOOST_FORCEINLINE
#include <brigand/sequences/list.hpp>           // for list
#include <cstddef>                              // for size_t
#include <functional>                           // for invoke
#include <limits>                               // for numeric_limits, numer...
#include <ostream>                              // for operator<<, ostream
#include <string>                               // for char_traits, basic_st...
#include <tuple>                                // for tuple
#include <type_traits>                          // for is_nothrow_invocable_v
#include <utility>                              // for forward, declval, ind...
#include "libshit/assert.hpp"                   // for LIBSHIT_UNREACHABLE
#include "libshit/except.hpp"                   // for ExceptionToString
#include "libshit/lua/function_call_types.hpp"  // for TupleLike, RetNum, Any
#include "libshit/lua/type_traits.hpp"          // for StateRef, TypeTraits
#include "libshit/meta_utils.hpp"               // for FunctionArguments
namespace Libshit { namespace Lua { namespace Detail { template <auto ...args> struct AutoList; } } }  // lines 299-299
namespace Libshit { namespace Lua { namespace Detail { template <auto Fun, bool Unsafe, typename Ret, typename Args> struct WrapFunGen; } } }  // lines 260-261
namespace Libshit { namespace Lua { namespace Detail { template <std::size_t Len, typename Args> struct ArgSeq; } } }  // lines 173-173
namespace Libshit { namespace Lua { namespace Detail { template <std::size_t N, typename Seq, typename Args> struct GenArgSequence; } } }  // lines 175-176
namespace Libshit { namespace Lua { namespace Detail { template <typename Args> struct OverloadCheck; } } }  // lines 301-301
namespace Libshit { namespace Lua { namespace Detail { template <typename Args> struct PrintOverload; } } }  // lines 329-329
namespace Libshit { namespace Lua { namespace Detail { template <typename Funs, typename Orig = Funs> struct OverloadWrap; } } }  // lines 315-315
namespace Libshit { namespace Lua { namespace Detail { template <typename Tuple, typename Index> struct TupleGet; } } }  // lines 138-138
namespace Libshit { namespace Lua { namespace Detail { template <typename Tuple, typename Index> struct TuplePush; } } }  // lines 213-213
---
